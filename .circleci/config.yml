version: 2.1

orbs:
  aws-eks: circleci/aws-eks@2.2.0
  kubernetes: circleci/kubernetes@1.3

jobs:
  test:
    docker:
      - image: python:3.7.3-stretch
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "requirements.txt" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            make install
      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}
      - run:
          name: run lint
          command: |
            . venv/bin/activate
            make lint

  publish-latest:
    docker:
      - image: circleci/buildpack-deps:stretch
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Publish Docker Image to Docker Hub
          command: |
            docker build --tag=ml-microservice .
            docker tag ml-microservice "$DOCKERHUB_REPOSITORY/ml-microservice:latest"
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker push "$DOCKERHUB_REPOSITORY/ml-microservice:latest"

  test-cluster:
    docker:
      - image: 'cimg/python:3.10'
    parameters:
      cluster-name:
        description: |
          Name of the EKS cluster
        type: string
    steps:
      - kubernetes/install:
          kubectl-version: v1.22.0
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: << parameters.cluster-name >>
      - run:
          command: |
            kubectl create deployment ml-microservice --image="$DOCKERHUB_REPOSITORY/ml-microservice:latest"
            kubectl scale deployments ml-microservice --replicas=2
            kubectl expose deployments/ml-microservice --type=LoadBalancer --port=80
            kubectl get services
          name: Test cluster

workflows:
  default:
    jobs:
      - test
      - publish-latest:
          filters:
            branches:
              only: master
      - aws-eks/create-cluster:
          cluster-name: my-eks-cluster
      - test-cluster:
          cluster-name: my-eks-cluster
          requires:
            - aws-eks/create-cluster
