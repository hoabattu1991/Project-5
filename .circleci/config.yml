version: 2.1

orbs:
  aws-eks: circleci/aws-eks@2.2.0
  kubernetes: circleci/kubernetes@1.3

jobs:
  test:
    docker:
      - image: python:3.7.3-stretch
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "requirements.txt" }}
      - run:
          name: Install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            make install
      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}
      - run:
          name: run lint
          command: |
            . venv/bin/activate
            make lint

  publish-image-latest:
    docker:
      - image: circleci/buildpack-deps:stretch
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Push docker image ml-microservice to dockerhub
          command: |
            docker build --tag=ml-microservice .
            docker tag ml-microservice "$DOCKERHUB_REPOSITORY/ml-microservice:latest"
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker push "$DOCKERHUB_REPOSITORY/ml-microservice:latest"

  configure-infrastructure:
    docker:
      - image: amazon/aws-cli
    steps:
      - run:
          name: Install dependencies
          command: |
            yum -y install tar gzip wget
      - run:
          command: |
            wget https://github.com/weaveworks/eksctl/releases/download/v0.100.0/eksctl_Linux_amd64.tar.gz
            tar xvzf eksctl_Linux_amd64.tar.gz
            mv eksctl /usr/local/bin
            eksctl create cluster --name my-eks-cluster --nodes=2 --spot --instance-types=t3.micro --region=us-east-1 --zones=us-east-1a,us-east-1b

  deploy-application:
    docker:
      - image: 'cimg/python:3.10'
    parameters:
      cluster-name:
        description: |
          Name of the EKS cluster
        type: string
    steps:
      - kubernetes/install:
          kubectl-version: v1.22.0
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: << parameters.cluster-name >>
      - run:
          name: Deploy application to AWS EKS cluster
          command: |
            kubectl create deployment ml-microservice --image="$DOCKERHUB_REPOSITORY/ml-microservice:latest"
            sleep 20
            kubectl scale deployments ml-microservice --replicas=2
            sleep 20
            kubectl expose deployments/ml-microservice --type=LoadBalancer --port=80
            sleep 20
            kubectl get service ml-microservice

workflows:
  default:
    jobs:
      - test
      - publish-image-latest:
          requires:
            - test
      - configure-infrastructure
      - deploy-application:
          cluster-name: my-eks-cluster
          requires:
            - configure-infrastructure
